@model CreaturesViewModel




<!DOCTYPE html>
<html lang="tr">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>Yeni Canlı Ekle</title>
	<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet">
	<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
	<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
	<link rel="stylesheet" href="~/EcoSphere.styles.css" asp-append-version="true" />
</head>

<body>
<div class="container">

<div class="main-card">

	<!-- Card Header -->
	<div class="card-header-custom">
		<h2><i class="fas fa-binoculars me-3"></i>Canlı Oluştur</h2>
	</div>

	<div class="card-body-custom">
		@using (Html.BeginForm("SubmitCreature", "CreaturesView", FormMethod.Post))
		{
			<div class="container">
				<!-- İlk 9 Eleman: 3x3 Grid -->
				<div class="row">
					<div class="col-md-4">
						<div class="form-group">
									<label for="UpperRealmName">Üst Alem Seçin</label>
									@Html.DropDownListFor(m => m.UpperRealmId, Model.UpperRealmNamed, "Üst Âlem Seçin", new { @class = "form-control", id = "UpperRealmDropdown" })
						</div>
					</div>
					<div class="col-md-4" id="KingdomSection">
						<div class="form-group">
									<label for="KingdomName">Alem Seçin</label>
									@Html.DropDownListFor(m => m.KingdomId, Model.KingdomNamed, "Alem Seçin", new { @class = "form-control", id = "KingdomDropdown", disabled = "disabled" })
						</div>
					</div>

						<div class="col-md-4" id="PhylumSection">
							<div class="form-group">
									<label for="PhylumName">Şube Seçin</label>
								<div class="d-flex align-items-center gap-2">
										@Html.DropDownListFor(m => m.PhylumId, Model.PhylumNamed, "Şube Seçin", new { @class = "form-control", id = "PhylumDropdown", disabled = "disabled" })
									<button type="button" class="btn btn-outline-primary btn-sm ms-2 btn-add-new" data-bs-toggle="modal" data-bs-target="#AddPhylumModal">
										<i class="fas fa-plus me-1"></i>Yeni
									</button>
								</div>
							</div>
						</div>


					<div class="col-md-4" id="ClassSection">
						<div class="form-group">
									<label for="ClassName">Sınıf Seçin</label>
								<div class="d-flex align-items-center gap-2">
										@Html.DropDownListFor(m => m.ClassId, Model.ClassNamed, "Sınıf Seçin", new { @class = "form-control", id = "ClassDropdown", disabled = "disabled" })
									<button type="button" class="btn btn-outline-primary btn-sm ms-2 btn-add-new" data-bs-toggle="modal" data-bs-target="#AddClassModal">
										<i class="fas fa-plus me-1"></i>Yeni
									</button>
								</div>
						</div>
					</div>
					<div class="col-md-4" id="OrderSection">
						<div class="form-group">
									<label for="OrderName">Takım Seçin</label>
								<div class="d-flex align-items-center gap-2">
										@Html.DropDownListFor(m => m.OrderId, Model.OrderNamed, "Takım Seçin", new { @class = "form-control", id = "OrderDropdown", disabled = "disabled" })
									<button type="button" class="btn btn-outline-primary btn-sm ms-2 btn-add-new" data-bs-toggle="modal" data-bs-target="#AddOrderModal">
										<i class="fas fa-plus me-1"></i>Yeni
									</button>
								</div>
						</div>
					</div>
					<div class="col-md-4" id="FamilySection">
						<div class="form-group">
									<label for="FamilyName">Familya Seçin</label>
								<div class="d-flex align-items-center gap-2">
										@Html.DropDownListFor(m => m.FamilyId, Model.FamilyNamed, "Familya Seçin", new { @class = "form-control", id = "FamilyDropdown", disabled = "disabled" })
									<button type="button" class="btn btn-outline-primary btn-sm ms-2 btn-add-new" data-bs-toggle="modal" data-bs-target="#AddFamilyModal">
										<i class="fas fa-plus me-1"></i>Yeni
									</button>
								</div>
						</div>
					</div>

					<div class="col-md-4" id="GenusSection">
						<div class="form-group">
									<label for="GenusName">Cins Seçin</label>
								<div class="d-flex align-items-center gap-2">
										@Html.DropDownListFor(m => m.GenusId, Model.GenusNamed, "Cins Seçin", new { @class = "form-control", id = "GenusDropdown", disabled = "disabled" })
									<button type="button" class="btn btn-outline-primary btn-sm ms-2 btn-add-new" data-bs-toggle="modal" data-bs-target="#AddGenusModal">
										<i class="fas fa-plus me-1"></i>Yeni
									</button>
								</div>
						</div>
					</div>

					<div class="col-md-4" id="SpeciesSection">
						<div class="form-group">
									<label for="SpeciesName">Tür Seçin</label>
								<div class="d-flex align-items-center gap-2">
										@Html.DropDownListFor(m => m.SpeciesId, Model.SpeciesNamed, "Tür Seçin", new { @class = "form-control", id = "SpeciesDropdown", disabled = "disabled" })
									<button type="button" class="btn btn-outline-primary btn-sm ms-2 btn-add-new" data-bs-toggle="modal" data-bs-target="#AddSpeciesModal">
										<i class="fas fa-plus me-1"></i>Yeni
									</button>
								</div>
						</div>
					</div>

					<div class="col-md-4" id="SubspeciesSection">
						<div class="form-group">
									<label for="SubspeciesName">Alt Tür Seçin</label>
								<div class="d-flex align-items-center gap-2">
										@Html.DropDownListFor(m => m.SubspeciesId, Model.SubspeciesNamed, "Alt Tür Seçin", new { @class = "form-control", id = "SubspeciesDropdown", disabled = "disabled" })
									<button type="button" class="btn btn-outline-primary btn-sm ms-2 btn-add-new" data-bs-toggle="modal" data-bs-target="#AddSubSpeciesModal">
										<i class="fas fa-plus me-1"></i>Yeni
									</button>
								</div>
						</div>
					</div>
				</div>

				<!-- Sonraki 4 Eleman: 2x2 Grid -->
				<div class="row mt-3">

					<div class="col-md-6" id="AuthorSection">
						<div class="form-group">
									<label for="AuthorName">Yazar Seçin</label>
								<div class="d-flex align-items-center gap-2">
										@Html.DropDownListFor(m => m.AuthorId, Model.AuthorNamed, "Yazar Seçin", new { @class = "form-control", id = "AuthorDropdown", disabled = "disabled" })
									<button type="button" class="btn btn-outline-primary btn-sm ms-2 btn-add-new" data-bs-toggle="modal" data-bs-target="#AddAuthorModal">
										<i class="fas fa-plus me-1"></i>Yeni
									</button>
								</div>
						</div>
					</div>

					<div class="col-md-6" id="IucnSection">
						<div class="form-group">
									<label for="IucnCode">IUCN Seçin</label>
							@Html.DropDownListFor(m => m.IucnId, Model.IucnCoded, "IUCN Seçin", new { @class = "form-control", id = "IucnDropdown", disabled = "disabled" })
						</div>
					</div>

					<div class="col-md-6" id="CommonNameSection">
						<div class="form-group">
									<label for="CommonName">Yaygın Adı Girin</label>
									@Html.TextBoxFor(m => m.CommonName, new { @class = "form-control", id = "CommonNameInput", disabled = "disabled" })
						</div>
					</div>

					<div class="col-md-6" id="ScientificNameSection">
						<div class="form-group">
							<label for="ScientificName">Bilimsel Adı Girin</label>
									@Html.TextBoxFor(m => m.ScientificName, new { @class = "form-control", id = "ScientificNameInput", disabled = "disabled" })
						</div>
					</div>

				</div>

				<div class="text-center mt-4" id="SubmitSection">
					<div class="form-group" >
								<button type="submit" class="btn btn-submit" disabled>
							<i class="fas fa-save me-2"></i>Canlıyı Kaydet
						</button>
					</div>
				</div>

			</div>

		}
	</div>
</div>
</div>

<!-- Modal for Phylum -->
<div class="modal fade" id="AddPhylumModal" tabindex="-1" aria-labelledby="AddPhylumModalLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="AddPhylumModalLabel">Add New Phylum</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<form id="AddPhylumForm" method="post" action="/CreaturesView/AddCreature">
				<div class="modal-body">
						<input type="hidden" id="SelectedKingdomID" name="KingdomID">
					<label for="PhylumName">Phylum Name</label>

						<input type="text" id="PhylumName2" name="PhylumName2" class="form-control" placeholder="Phylum Name" required>
					<label for="PhylumScientificName">Phylum Scientific Name</label>

						<input type="text" id="PhylumScientificName" name="PhylumScientificName" class="form-control" placeholder="Phylum Scientific Name" required>
				</div>
				<div class="modal-footer">
						<button type="submit" class="btn btn-add-new">Save</button>
				</div>
			</form>
		</div>
	</div>
</div>



	<!-- Modal for Class -->
	<div class="modal fade" id="AddClassModal" tabindex="-1" aria-labelledby="AddClassModalLabel" aria-hidden="true">
		<div class="modal-dialog">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title" id="AddClassModalLabel">Add New Class</h5>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
				</div>
				<form id="AddClassForm" method="post" action="/CreaturesView/AddCreature">
					<div class="modal-body">
						<input type="hidden" id="SelectedPhylumID" name="PhylumID">
						<label for="ClassName">Class Name</label>
						<input type="text" id="ClassName2" name="ClassName2" class="form-control" required>
						<label for="ClassScientificName">Class Scientific Name</label>
						<input type="text" id="ClassScientificName" name="ClassScientificName" class="form-control" required>
					</div>
					<div class="modal-footer">
						<button type="submit" class="btn btn-add-new">Save</button>
					</div>
				</form>
			</div>
		</div>
	</div>
	<!-- Modal for Order -->
	<div class="modal fade" id="AddOrderModal" tabindex="-1" aria-labelledby="AddOrderModalLabel" aria-hidden="true">
		<div class="modal-dialog">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title" id="AddOrderModalLabel">Add New Order</h5>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
				</div>
				<form id="AddOrderForm" method="post" action="/CreaturesView/AddCreature">
					<div class="modal-body">
						<input type="hidden" id="SelectedClassID" name="ClassID">
						<label for="OrderName">Order Name</label>
						<input type="text" id="OrderName2" name="OrderName2" class="form-control" required>
						<label for="OrderScientificName">Order Scientific Name</label>
						<input type="text" id="OrderScientificName" name="OrderScientificName" class="form-control" required>
					</div>
					<div class="modal-footer">
						<button type="submit" class="btn btn-add-new">Save</button>
					</div>
				</form>
			</div>
		</div>
	</div>
	<!-- Modal for Family -->
	<div class="modal fade" id="AddFamilyModal" tabindex="-1" aria-labelledby="AddFamilyModalLabel" aria-hidden="true">
		<div class="modal-dialog">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title" id="AddFamilyModalLabel">Add New Family</h5>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
				</div>
				<form id="AddFamilyForm" method="post" action="/CreaturesView/AddCreature">
					<div class="modal-body">
						<input type="hidden" id="SelectedOrderID" name="OrderID">
						<label for="FamilyName">Family Name</label>
						<input type="text" id="FamilyName2" name="FamilyName2" class="form-control" required>
						<label for="FamilyScientificName">Family Scientific Name</label>
						<input type="text" id="FamilyScientificName" name="FamilyScientificName" class="form-control" required>
					</div>
					<div class="modal-footer">
						<button type="submit" class="btn btn-add-new">Save</button>
					</div>
				</form>
			</div>
		</div>
	</div>
	<!-- Modal for Genus -->
	<div class="modal fade" id="AddGenusModal" tabindex="-1" aria-labelledby="AddGenusModalLabel" aria-hidden="true">
		<div class="modal-dialog">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title" id="AddGenusModalLabel">Add New Genus</h5>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
				</div>
				<form id="AddGenusForm" method="post" action="/CreaturesView/AddCreature">
					<div class="modal-body">
						<input type="hidden" id="SelectedFamilyID" name="FamilyID">
						<label for="GenusName">Genus Name</label>
						<input type="text" id="GenusName2" name="GenusName2" class="form-control" required>
						<label for="GenusScientificName">Genus Scientific Name</label>
						<input type="text" id="GenusScientificName" name="GenusScientificName" class="form-control" required>
					</div>
					<div class="modal-footer">
						<button type="submit" class="btn btn-add-new">Save</button>
					</div>
				</form>
				</div>
				</div>
				</div>
	<!-- Modal for Species -->
	<div class="modal fade" id="AddSpeciesModal" tabindex="-1" aria-labelledby="AddSpeciesModalLabel" aria-hidden="true">
		<div class="modal-dialog">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title" id="AddSpeciesModalLabel">Add New Species</h5>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
				</div>
				<form id="AddSpeciesForm" method="post" action="/CreaturesView/AddCreature">
					<div class="modal-body">
						<input type="hidden" id="SelectedGenusID" name="GenusID">
						<label for="SpeciesName">Species Name</label>
						<input type="text" id="SpeciesName2" name="SpeciesName2" class="form-control" required>
						<label for="SpeciesScientificName">Species Scientific Name</label>
						<input type="text" id="SpeciesScientificName" name="SpeciesScientificName" class="form-control" required>
					</div>
					<div class="modal-footer">
						<button type="submit" class="btn btn-add-new">Save</button>
					</div>
				</form>
			</div>
		</div>
	</div>
	<!-- Modal for Subspecies -->
	<div class="modal fade" id="AddSubSpeciesModal" tabindex="-1" aria-labelledby="AddSubSpeciesModalLabel" aria-hidden="true">
		<div class="modal-dialog">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title" id="AddSubSpeciesModalLabel">Add New Subspecies</h5>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
				</div>
				<form id="AddSubSpeciesForm" method="post" action="/CreaturesView/AddCreature">
					<div class="modal-body">
						<label for="SubspeciesName">Subspecies Name</label>
						<input type="text" id="SubspeciesName2" name="SubspeciesName2" class="form-control" required>
						<label for="SubspeciesScientificName">Subspecies Scientific Name</label>
						<input type="text" id="SubspeciesScientificName" name="SubspeciesScientificName" class="form-control" required>
					</div>
					<div class="modal-footer">
						<button type="submit" class="btn btn-add-new">Save</button>
					</div>
				</form>
			</div>
		</div>
	</div>
	<!-- Modal for Author -->
	<div class="modal fade" id="AddAuthorModal" tabindex="-1" aria-labelledby="AddAuthorModalLabel" aria-hidden="true">
		<div class="modal-dialog">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title" id="AddAuthorModalLabel">Add New Author</h5>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
				</div>
				<form id="AddAuthorForm" method="post" action="/CreaturesView/AddCreature">
					<div class="modal-body">
						<label for="AuthorName2">Author Name</label>
						<input type="text" id="AuthorName2" name="AuthorName2" class="form-control" required>
					</div>
					<div class="modal-footer">
						<button type="submit" class="btn btn-add-new">Save</button>
					</div>
				</form>
			</div>
		</div>
	</div>
	
	

	<script>
								// Seçilen Upper Realm'e bağlı Kingdomları getir
				 $('#AddPhylumForm').on('submit', function (e) {
				e.preventDefault();

				$.ajax({
					url: '/CreaturesView/AddCreature',
					type: 'POST',
					data: $(this).serialize(),
					success: function (response) {
				if (response.success) {
					alert(response.message);

					// Yeni phylum'ı dropdown'a ekle
					$('#PhylumDropdown').append(
						$('<option>', {
							value: response.phylumId,
							text: response.phylumName,
							selected: false
						})
					);

					// Modal'ı kapat
					$('#AddPhylumModal').modal('hide');
					$('body').removeClass('modal-open');
					$('.modal-backdrop').remove();
				} else {
					alert(response.message);
				}
			},
			error: function () {
				alert('Unexpected error occurred.');
			}
		});
	});
			 $('#AddClassForm').on('submit', function (e) {
				e.preventDefault();

				$.ajax({
					url: '/CreaturesView/AddCreature',
					type: 'POST',
					data: $(this).serialize(),
					success: function (response) {
				if (response.success) {
					alert(response.message);

					// Yeni phylum'ı dropdown'a ekle
					$('#ClassDropdown').append(
						$('<option>', {
							value: response.classID,
							text: response.className,
							selected: false
						})
					);

					// Modal'ı kapat
					$('#AddClassModal').modal('hide');
					$('body').removeClass('modal-open');
					$('.modal-backdrop').remove();
				} else {
					alert(response.message);
				}
			},
			error: function () {
				alert('Unexpected error occurred.');
			}
		});
	});
	$('#AddOrderForm').on('submit', function (e) {
				e.preventDefault();

				$.ajax({
					url: '/CreaturesView/AddCreature',
					type: 'POST',
					data: $(this).serialize(),
					success: function (response) {
				if (response.success) {
					alert(response.message);

					// Yeni phylum'ı dropdown'a ekle
					$('#OrderDropdown').append(
						$('<option>', {
							value: response.orderId,
							text: response.orderName,
							selected: false
						})
					);

					// Modal'ı kapat
					$('#AddOrderModal').modal('hide');
					$('body').removeClass('modal-open');
					$('.modal-backdrop').remove();
				} else {
					alert(response.message);
				}
			},
			error: function () {
				alert('Unexpected error occurred.');
			}
		});
	});
	$('#AddFamilyForm').on('submit', function (e) {
				e.preventDefault();

				$.ajax({
					url: '/CreaturesView/AddCreature',
					type: 'POST',
					data: $(this).serialize(),
					success: function (response) {
				if (response.success) {
					alert(response.message);

					// Yeni phylum'ı dropdown'a ekle
					$('#FamilyDropdown').append(
						$('<option>', {
							value: response.familyID,
							text: response.familyName,
							selected: false
						})
					);

					// Modal'ı kapat
					$('#AddFamilyModal').modal('hide');
					$('body').removeClass('modal-open');
					$('.modal-backdrop').remove();
				} else {
					alert(response.message);
				}
			},
			error: function () {
				alert('Unexpected error occurred.');
			}
		});
	});
	$('#AddGenusForm').on('submit', function (e) {
		e.preventDefault();
		$.ajax({
			url: '/CreaturesView/AddCreature',
			type: 'POST',
			data: $(this).serialize(),
			success: function (response) {
				if (response.success) {
					alert(response.message);
					// Yeni phylum'ı dropdown'a ekle
					$('#GenusDropdown').append(
						$('<option>', {
							value: response.genusId,
							text: response.genusName,
							selected: false
						})
					);
					// Modal'ı kapat
					$('#AddGenusModal').modal('hide');
					$('body').removeClass('modal-open');
					$('.modal-backdrop').remove();
				} else {
					alert(response.message);
				}
			},
			error: function () {
				alert('Unexpected error occurred.');
			}
		});
	});
	$('#AddSpeciesForm').on('submit', function (e) {
		e.preventDefault();
		$.ajax({
			url: '/CreaturesView/AddCreature',
			type: 'POST',
			data: $(this).serialize(),
			success: function (response) {
				if (response.success) {
					alert(response.message);
					// Yeni phylum'ı dropdown'a ekle
					$('#SpeciesDropdown').append(
						$('<option>', {
							value: response.speciesID,
							text: response.speciesName,
							selected: false
						})
					);
					// Modal'ı kapat
					$('#AddSpeciesModal').modal('hide');
					$('body').removeClass('modal-open');
					$('.modal-backdrop').remove();
				} else {
					alert(response.message);
				}
			},
			error: function () {
				alert('Unexpected error occurred.');
			}
		});
	});
	$('#AddSubSpeciesForm').on('submit', function (e) {
		e.preventDefault();
		$.ajax({
			url: '/CreaturesView/AddCreature',
			type: 'POST',
			data: $(this).serialize(),
			success: function (response) {
				if (response.success) {
					alert(response.message);
					// Yeni phylum'ı dropdown'a ekle
					$('#SubspeciesDropdown').append(
						$('<option>', {
							value: response.subspeciesID,
							text: response.subspeciesName,
							selected: false
						})
					);
					// Modal'ı kapat
					$('#AddSubSpeciesModal').modal('hide');
					$('body').removeClass('modal-open');
					$('.modal-backdrop').remove();
				} else {
					alert(response.message);
				}
			},
			error: function () {
				alert('Unexpected error occurred.');
			}
		});
	});
	$('#AddAuthorForm').on('submit', function (e) {
		e.preventDefault();
		$.ajax({
			url: '/CreaturesView/AddCreature',
			type: 'POST',
			data: $(this).serialize(),
			success: function (response) {
				if (response.success) {
					alert(response.message);
					// Yeni phylum'ı dropdown'a ekle
					$('#AuthorDropdown').append(
						$('<option>', {
							value: response.authorID,
							text: response.authorName,
							selected: false
						})
					);
					// Modal'ı kapat
					$('#AddAuthorModal').modal('hide');
					$('body').removeClass('modal-open');
					$('.modal-backdrop').remove();
				} else {
					alert(response.message);
				}
			},
			error: function () {
				alert('Unexpected error occurred.');
			}
		});
	});

					document.addEventListener("DOMContentLoaded", function () {
						
						// Upper Realm seçildiğinde Kingdom'u göster
							document.getElementById('UpperRealmDropdown').addEventListener('change', function () {
							const upperRealmID = this.value;
							const kingdomSection = document.getElementById('KingdomSection');
							const kingdomDropdown = document.getElementById('KingdomDropdown');

							// Eğer bir Upper Realm seçilmişse Kingdom bölümü göster, değilse gizle
							kingdomSection.style.display = upperRealmID ? 'block' : 'none';

				
				if (upperRealmID) {
					fetch(`/CreaturesView/GetKingdomsByUpperRealm?upperRealmId=${upperRealmID}`)
						.then(response => response.json())
						.then(data => {
							// Önce Kingdom dropdown'ını temizle
							kingdomDropdown.innerHTML = '<option value="">Select Kingdom</option>';

							// Gelen veriyi dropdown'a ekle
							data.forEach(kingdom => {
								const option = document.createElement('option');
								option.value = kingdom.value;
								option.textContent = kingdom.text;
								kingdomDropdown.appendChild(option);
							});
						})
						.catch(error => console.error('Error fetching kingdoms:', error));
				} else {
					// Upper Realm seçilmezse Kingdom dropdown'ını temizle
					kingdomDropdown.innerHTML = '<option value="">Select Kingdom</option>';
				}
			});

						// Kingdom seçildiğinde Phylum'u göster
						document.getElementById('KingdomDropdown').addEventListener('change', function () {
							const kingdomID = this.value;
							const PhylumSection = document.getElementById('PhylumSection');
							const PhylumDropdown = document.getElementById('PhylumDropdown');

								// Eğer bir Upper Realm seçilmişse Kingdom bölümü göster, değilse gizle
								PhylumSection.style.display = kingdomID ? 'block' : 'none';

								// Seçilen Upper Realm'e bağlı Kingdomları getir
					if (kingdomID) {
									fetch(`/CreaturesView/GetPhylumsByKingdom?kingdomID=${kingdomID}`)
							.then(response => response.json())
							.then(data => {
									PhylumDropdown.innerHTML = '<option value="">Select Phylum</option>';

								data.forEach(phylum => {
									const option = document.createElement('option');
									option.value = phylum.value;
									option.textContent = phylum.text;
									PhylumDropdown.appendChild(option);
								});
							})
							.catch(error => console.error('Error fetching Phylums:', error));
					} else {
						// Upper Realm seçilmezse Kingdom dropdown'ını temizle
							PhylumDropdown.innerHTML = '<option value="">Select Phylum</option>';
					}
				});

						// Phylum seçildiğinde Class'ı göster
						document.getElementById('PhylumDropdown').addEventListener('change', function () {
							const phylumID = this.value;
							const classSection = document.getElementById('ClassSection');
							const ClassDropdown = document.getElementById('ClassDropdown');
							ClassSection.style.display = phylumID ? 'block' : 'none';
						if (phylumID) {
								fetch(`/CreaturesView/GetClassByPhylum?phylumID=${phylumID}`)
								.then(response => response.json())
								.then(data => {
								ClassDropdown.innerHTML = '<option value="">Select Class</option>';

									data.forEach(classes => {
										const option = document.createElement('option');
										option.value = classes.value;
										option.textContent = classes.text;
										ClassDropdown.appendChild(option);
									});
								})
								.catch(error => console.error('Error fetching Class:', error));
						} else {
							// Upper Realm seçilmezse Kingdom dropdown'ını temizle
								ClassDropdown.innerHTML = '<option value="">Select Class</option>';
						}
					});

						// Class seçildiğinde Order'ı göster
						document.getElementById('ClassDropdown').addEventListener('change', function () {
						const ClassID = this.value;
						const OrderSection = document.getElementById('OrderSection');
						const OrderDropdown = document.getElementById('OrderDropdown');
						OrderSection.style.display = ClassID ? 'block' : 'none';
									if (ClassID) {
									fetch(`/CreaturesView/GetOrderByClass?ClassID=${ClassID}`)
									.then(response => response.json())
									.then(data => {
									OrderDropdown.innerHTML = '<option value="">Select Order</option>';

										data.forEach(Order => {
											const option = document.createElement('option');
											option.value = Order.value;
											option.textContent = Order.text;
											OrderDropdown.appendChild(option);
										});
									})
									.catch(error => console.error('Error fetching Order:', error));
							} else {
								// Upper Realm seçilmezse Kingdom dropdown'ını temizle
									OrderDropdown.innerHTML = '<option value="">Select Order</option>';
							}
						});

						// Order seçildiğinde Family'yi göster
						document.getElementById('OrderDropdown').addEventListener('change', function () {
							const OrderID = this.value;
							const FamilySection = document.getElementById('FamilySection');
							const FamilyDropdown = document.getElementById('FamilyDropdown');
							FamilySection.style.display = OrderID ? 'block' : 'none';
										if (OrderID) {
										fetch(`/CreaturesView/GetFamilyByOrder?OrderID=${OrderID}`)
										.then(response => response.json())
										.then(data => {
										FamilyDropdown.innerHTML = '<option value="">Select Family</option>';

											data.forEach(Family => {
												const option = document.createElement('option');
												option.value = Family.value;
												option.textContent = Family.text;
												FamilyDropdown.appendChild(option);
											});
										})
										.catch(error => console.error('Error fetching Family:', error));
								} else {
									// Upper Realm seçilmezse Kingdom dropdown'ını temizle
										FamilyDropdown.innerHTML = '<option value="">Select Family</option>';
								}
							});

						// Family seçildiğinde Genus'u göster
						document.getElementById('FamilyDropdown').addEventListener('change', function () {
						const FamilyID = this.value;
						const GenusSection = document.getElementById('GenusSection');
						const GenusDropdown = document.getElementById('GenusDropdown');
						GenusSection.style.display = FamilyID ? 'block' : 'none';
											if (FamilyID) {
											fetch(`/CreaturesView/GetGenusByFamily?FamilyID=${FamilyID}`)
											.then(response => response.json())
											.then(data => {
												GenusDropdown.innerHTML = '<option value="">Select Genus</option>';

												data.forEach(Genus => {
													const option = document.createElement('option');
													option.value = Genus.value;
													option.textContent = Genus.text;
													GenusDropdown.appendChild(option);
												});
											})
											.catch(error => console.error('Error fetching Genus:', error));
									} else {
										// Upper Realm seçilmezse Kingdom dropdown'ını temizle
												GenusDropdown.innerHTML = '<option value="">Select Genus</option>';
									}
								});

						// Genus seçildiğinde Species'i göster
						document.getElementById('GenusDropdown').addEventListener('change', function () {
							const genusID = this.value;
							const SpeciesSection = document.getElementById('SpeciesSection');
							const SpeciesDropdown = document.getElementById('SpeciesDropdown');
							SpeciesSection.style.display = genusID ? 'block' : 'none';
													if (genusID) {
														fetch(`/CreaturesView/GetSpeciesByGenus?genusID=${genusID}`)
												.then(response => response.json())
												.then(data => {
														SpeciesDropdown.innerHTML = '<option value="">Select Species</option>';

													data.forEach(Species => {
														const option = document.createElement('option');
														option.value = Species.value;
														option.textContent = Species.text;
														SpeciesDropdown.appendChild(option);
													});
												})
												.catch(error => console.error('Error fetching Species:', error));
										} else {
											// Upper Realm seçilmezse Kingdom dropdown'ını temizle
														SpeciesDropdown.innerHTML = '<option value="">Select Species</option>';
										}
									});

						// Species seçildiğinde Subspecies'i göster
							document.getElementById('SpeciesDropdown').addEventListener('change', function () {
							const speciesID = this.value;
							const subspeciesSection = document.getElementById('SubspeciesSection');
									subspeciesSection.style.display = speciesID ? 'block' : 'none';
							});


						// Subspecies seçildiğinde IUCN'yi göster
						document.getElementById('SubspeciesDropdown').addEventListener('change', function () {
							const subspeciesID = this.value;
							const iucnSection = document.getElementById('IucnSection');

							iucnSection.style.display = subspeciesID ? 'block' : 'none';
						});

						// IUCN seçildiğinde Author'ı göster
						document.getElementById('IucnDropdown').addEventListener('change', function () {
							const iucnID = this.value;
							const authorSection = document.getElementById('AuthorSection');

							authorSection.style.display = iucnID ? 'block' : 'none';
						});

						// Author seçildiğinde Common Name alanını göster
						document.getElementById('AuthorDropdown').addEventListener('change', function () {
							const authorID = this.value;
							const commonNameSection = document.getElementById('CommonNameSection');

							commonNameSection.style.display = authorID ? 'block' : 'none';
						});

						// Common Name girildiğinde Scientific Name alanını göster
						document.getElementById('CommonNameInput').addEventListener('input', function () {
							const commonName = this.value;
							const scientificNameSection = document.getElementById('ScientificNameSection');

							scientificNameSection.style.display = commonName ? 'block' : 'none';
						});
					// Scientific Name girildiğinde Submit butonunu göster
					document.getElementById('ScientificNameInput').addEventListener('input', function () {
						const ScientificName = this.value;
						const SubmitSection = document.getElementById('SubmitSection');

						SubmitSection.style.display = ScientificName ? 'block' : 'none';
					});

						// Sayfa yüklendiğinde başarılı mesaj varsa, alert göster
						window.onload = function () {
							const successMessage = '@TempData["SuccessMessage"]';
							if (successMessage) {
								alert(successMessage);
							}
						};
					});

						  document.getElementById('KingdomDropdown').addEventListener('change', function () {
					const kingdomID = this.value;
					const phylumSection = document.getElementById('PhylumSection');

					if (kingdomID) {
						phylumSection.style.display = 'block';
						document.getElementById('SelectedKingdomID').value = kingdomID;
					} else {
						phylumSection.style.display = 'none';
					}
				});
					document.getElementById('PhylumDropdown').addEventListener('change', function () {
					const phylumID = this.value;
					const classSection = document.getElementById('ClassSection');

			if (phylumID) {
				classSection.style.display = 'block';
				document.getElementById('SelectedPhylumID').value = phylumID;
			} else {
				classSection.style.display = 'none';
			}
		});
				document.getElementById('ClassDropdown').addEventListener('change', function () {
					const classID = this.value;
					const orderSection = document.getElementById('OrderSection');

			if (classID) {
				orderSection.style.display = 'block';
				document.getElementById('SelectedClassID').value = classID;
			} else {
				classSection.style.display = 'none';
			}
		});
		document.getElementById('OrderDropdown').addEventListener('change', function () {
					const orderID = this.value;
					const familySection = document.getElementById('FamilySection');

			if (orderID) {
				familySection.style.display = 'block';
				document.getElementById('SelectedOrderID').value = orderID;
			} else {
				classSection.style.display = 'none';
			}
		});
		document.getElementById('FamilyDropdown').addEventListener('change', function () {
			const familyID = this.value;
			const genusSection = document.getElementById('GenusSection');

			if (familyID) {
				genusSection.style.display = 'block';
				document.getElementById('SelectedFamilyID').value = familyID;
				} else {
					genusSection.style.display = 'none';
					}
					});
					document.getElementById('GenusDropdown').addEventListener('change', function () {
						const genusID = this.value;
						const speciesSection = document.getElementById('SpeciesSection');
						if (genusID) {
							speciesSection.style.display = 'block';
							document.getElementById('SelectedGenusID').value = genusID;
						} else {
							speciesSection.style.display = 'none';
						}
					});


						document.addEventListener("DOMContentLoaded", function () {
			const chain = [
				{ id: "UpperRealmDropdown", nextId: "KingdomDropdown" },
				{ id: "KingdomDropdown", nextId: "PhylumDropdown", button: "#AddPhylumModal" },
				{ id: "PhylumDropdown", nextId: "ClassDropdown", button: "#AddClassModal" },
				{ id: "ClassDropdown", nextId: "OrderDropdown", button: "#AddOrderModal" },
				{ id: "OrderDropdown", nextId: "FamilyDropdown", button: "#AddFamilyModal" },
				{ id: "FamilyDropdown", nextId: "GenusDropdown", button: "#AddGenusModal" },
				{ id: "GenusDropdown", nextId: "SpeciesDropdown", button: "#AddSpeciesModal" },
				{ id: "SpeciesDropdown", nextId: "SubspeciesDropdown", button: "#AddSubSpeciesModal" },
				{ id: "SubspeciesDropdown", nextId: "AuthorDropdown", button: "#AddAuthorModal" },
				{ id: "AuthorDropdown", nextId: "IucnDropdown" },
				{ id: "IucnDropdown", nextId: "CommonNameInput" },
				{ id: "CommonNameInput", nextId: "ScientificNameInput" },
				{ id: "ScientificNameInput", nextId: "SubmitSection" }, // özel işlem gerektiriyor
			];

			// İlk hariç tüm sonraki adımları pasifleştir
			chain.forEach((step, index) => {
				if (index > 0) {
					const nextEl = document.getElementById(step.nextId);

					// Eğer SubmitSection ise içindeki butonu disable et
					if (step.nextId === "SubmitSection") {
						const submitBtn = document.querySelector("#SubmitSection button[type='submit']");
						if (submitBtn) submitBtn.disabled = true;
					} else if (nextEl) {
						nextEl.disabled = true;
					}

					// Modal butonları da pasifleştir
					if (step.button) {
						const btn = document.querySelector(`button[data-bs-target='${step.button}']`);
						if (btn) btn.disabled = true;
					}
				}
			});

			// Zincirli etkinleştirme
			chain.forEach((step) => {
				const currentEl = document.getElementById(step.id);
				const nextEl = document.getElementById(step.nextId);
				const modalButton = step.button ? document.querySelector(`button[data-bs-target='${step.button}']`) : null;

				if (currentEl) {
					currentEl.addEventListener("change", function () {
						const value = this.value?.trim();
						const isValid = value && value !== "0";

						if (step.nextId === "SubmitSection") {
							const submitBtn = document.querySelector("#SubmitSection button[type='submit']");
							if (submitBtn) submitBtn.disabled = !isValid;
						} else if (nextEl) {
							nextEl.disabled = !isValid;
						}

						if (modalButton) modalButton.disabled = !isValid;
					});
				}
			});
		});

</script>


</body>
</html>