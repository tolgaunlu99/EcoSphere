@{
    ViewData["Title"] = "Bekleyen Gözlemler";
    var roleId = Context.Session.GetInt32("Role_ID") ?? 0;
}
@section Styles {
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.4/css/jquery.dataTables.min.css" />
    <link rel="stylesheet" href="https://cdn.datatables.net/buttons/2.3.6/css/buttons.dataTables.min.css" />
}
<div class="container obs-container mt-4">
    <h3>@ViewData["Title"]</h3>
    <hr />

    <div class="table-responsive">
        <table id="observationTable" class="table table-striped table-bordered" cellspacing="0">
            <thead class="table-active">
                <tr>
                    <th style="display:none;">ID</th>
                    <th>Tür Adı</th>
                    <th>Kullanıcı Adı</th>
                    <th>İl</th>
                    <th>İlçe</th>
                    <th>Endemik Durumu</th>
                    <th>Proje Adı</th>
                    <th>Referans</th>
                    <th>Lokasyon Türü</th>
                    <th>Cinsiyet</th>
                    <th>Boylam</th>
                    <th>Enlem</th>
                    <th>Aktivite</th>
                    <th>Gözlem Zamanı</th>
                    <th>Oluşturulma Tarihi</th>
                    <th class="noExport" style="text-align:center; width:120px;">İşlemler</th>

                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
</div>

@section Scripts {
    <script>
        const userRoleId = @roleId;
    </script>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.4/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.3.6/js/dataTables.buttons.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.10.1/jszip.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/vfs_fonts.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.3.6/js/buttons.html5.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.3.6/js/buttons.print.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.3.6/js/buttons.colVis.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        $(document).ready(function () {
            var table = $('#observationTable').DataTable({
                processing: true,
                ajax: {
                    url: '/ObservationView/GetPendingObservations',
                    type: 'POST',
                    dataSrc: function (json) {
                        // Eğer kullanıcı Observer ise "True" olan endemic kayıtları filtrele
                        if (userRoleId !== 1 && userRoleId !== 2) {
                            json = json.filter(item => item.endemicStatName !== "True");
                        }
                        return json;
                    }
                },
                language: {
                    "decimal": ",",
                    "emptyTable": "Tabloda veri bulunmuyor",
                    "info": "_TOTAL_ kayıttan _START_ - _END_ arası gösteriliyor",
                    "infoEmpty": "0 kayıttan 0 - 0 arası gösteriliyor",
                    "infoFiltered": "(_MAX_ kayıt içerisinden bulunan)",
                    "infoPostFix": "",
                    "thousands": ".",
                    "lengthMenu": "Kayıt göster:_MENU_",
                    "loadingRecords": "Yükleniyor...",
                    "processing": "İşleniyor...",
                    "search": "Genel Arama:",
                    "searchPlaceholder": "Tabloda ara...",
                    "zeroRecords": "Eşleşen kayıt bulunamadı",
                    "paginate": {
                        "first": "İlk",
                        "last": "Son",
                        "next": "Sonraki",
                        "previous": "Önceki"
                    },
                    "aria": {
                        "sortAscending": ": artan sütun sıralaması için aktif hale getir",
                        "sortDescending": ": azalan sütun sıralaması için aktif hale getir"
                    }
                },
                dom: '<"table-header d-flex justify-content-between mb-3"<"dt-buttons btn-group"B><"table-controls d-flex align-items-center"<"me-2"l><"table-search"f>>>rtip',
                scrollX: true,
                paging: true,
                autoWidth: false,
                columns: [
                    { data: 'id', visible: false },
                    { data: 'scientificName' },
                    { data: 'username' },
                    { data: 'provinceName' },
                    { data: 'districtName' },
                    { data: 'endemicStatus' },
                    { data: 'projectName' },
                    { data: 'referenceName' },
                    { data: 'locationType' },
                    { data: 'genderName' },
                    { data: 'long' },
                    { data: 'lat' },
                    { data: 'activity' },
                    {
                        data: 'seenTime',
                        render: function (data) {
                            return data ? new Date(data).toLocaleString() : '';
                        }
                    },
                    {
                        data: 'creationDate',
                        render: function (data) {
                            return data ? new Date(data).toLocaleString() : '';
                        }
                    },
                            {
            data: null,
            className: 'text-center',
            render: function (data, type, row) {
                return `
                    <button type="button" class="btn btn-sm btn-success dt-approve me-1">Kabul Et</button>
                    <button type="button" class="btn btn-sm btn-primary dt-details me-1">Detay</button>
                    <button type="button" class="btn btn-sm btn-danger dt-delete">Sil</button>
                `;
            },
            orderable: false
        }
                ],
                    buttons: userRoleId === 3
        ? [
            {
                extend: 'colvis',
                text: 'Columns',
                collectionLayout: 'fixed two-column'
            }
        ]
        : [
            {
                extend: 'colvis',
                text: 'Sütunlar',
                collectionLayout: 'fixed two-column'
            },
            {
                extend: 'csvHtml5',
                exportOptions: { columns: ':not(.noExport)' },
                action: function (e, dt, button, config) {
                    logExport('csv');
                    $.fn.dataTable.ext.buttons.csvHtml5.action.call(this, e, dt, button, config);
                }
            },
            {
                extend: 'excelHtml5',
                exportOptions: { columns: ':not(.noExport)' },
                action: function (e, dt, button, config) {
                    logExport('excel');
                    $.fn.dataTable.ext.buttons.excelHtml5.action.call(this, e, dt, button, config);
                }
            }
        ]
            });
                    $('#observationTable').on('click', '.dt-details', function (e) {
            e.preventDefault();
            const id = table.row($(this).closest('tr')).data().id;
            window.open('/ObservationView/Details/' + id, '_blank');
        });
            function logExport(type) {
                $.ajax({
                    url: '/ObservationView/LogUserExport',
                    type: 'POST',
                    data: { exportType: type, sourceTable: 'Observation' },
                    success: function (res) {
                        if (!res.success) {
                            console.error("Export log kaydedilirken hata:", res.message);
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error("Export log kaydedilirken hata:", error);
                    }
                });
            }
                    $('#observationTable').on('click', '.dt-approve', function (e) {
            e.preventDefault();
            const row = table.row($(this).closest('tr'));
            const rowData = row.data();
            const id = rowData.id;

            Swal.fire({
                title: 'Emin misiniz?',
                text: 'Bu gözlemi onaylamak istiyor musunuz?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonText: 'Evet, onayla!',
                cancelButtonText: 'İptal'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.post('/ObservationView/Approve', { id: id }, function (response) {
                        if (response.success) {
                            row.remove().draw(false);
                            Swal.fire('Onaylandı!', 'Gözlem başarıyla onaylandı.', 'success');
                        } else {
                            Swal.fire('Hata!', response.message || 'İşlem başarısız.', 'error');
                        }
                    }).fail(() => {
                        Swal.fire('Hata!', 'İstek sırasında hata oluştu.', 'error');
                    });
                }
            });
        });
            
                $('#observationTable').on('click', '.dt-delete', function (e) {
                    e.preventDefault();
                    var row = table.row($(this).closest('tr'));
                    var rowData = row.data();
                    var id = rowData.id;

                    Swal.fire({
                        title: 'Emin misiniz?',
                        text: 'Bu gözlemi silmek istiyor musunuz?',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#d33',
                        cancelButtonColor: '#6c757d',
                        confirmButtonText: 'Evet, sil!',
                        cancelButtonText: 'İptal'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            $.ajax({
                                url: '/ObservationView/Delete',
                                type: 'POST',
                                data: { id: id },
                                success: function (response) {
                                    if (response.success) {
                                        table.ajax.reload(null, false);
                                        Swal.fire('Silindi!', 'Gözlem başarıyla silindi.', 'success');
                                    } else {
                                        Swal.fire('Hata!', response.message || 'Silme işlemi başarısız.', 'error');
                                    }
                                },
                                error: function () {
                                    Swal.fire('Hata!', 'Silme isteği sırasında bir hata oluştu.', 'error');
                                }
                            });
                        }
                    });
                });
            
        });
    </script>
}