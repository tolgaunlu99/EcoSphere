@model EcoSphere.Models.DashboardViewModel

@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewData["Title"] = "Gösterge Paneli";
}

<div class="container-fluid mt-5">
    <h3>Gösterge Paneli</h3>
    <hr />

    <!-- Summary Cards -->
    <div class="row">
        <div class="col mb-3">
            <div class="card text-white shadow" style="background-color: #286107;">
                <div class="card-body">
                    <div class="text-uppercase mb-1">Toplam Kullanıcı</div>
                    <div class="h5 mb-0 font-weight-bold">@Model.TotalUsers</div>
                </div>
            </div>
        </div>
        <div class="col mb-3">
            <div class="card text-white shadow" style="background-color: #286107;">
                <div class="card-body">
                    <div class="text-uppercase mb-1">Toplam Species</div>
                    <div class="h5 mb-0 font-weight-bold">@Model.TotalCreatures</div>
                </div>
            </div>
        </div>
        <div class="col mb-3">
            <div class="card text-white shadow" style="background-color: #286107;">
                <div class="card-body">
                    <div class="text-uppercase mb-1">Toplam Observations</div>
                    <div class="h5 mb-0 font-weight-bold">@Model.TotalObservations</div>
                </div>
            </div>
        </div>
        <div class="col mb-3">
            <div class="card text-white shadow" style="background-color: #286107;">
                <div class="card-body">
                    <div class="text-uppercase mb-1">Bugünkü Giriş Sayısı</div>
                    <div class="h5 mb-0 font-weight-bold">@Model.TodayLogins</div>
                </div>
            </div>
        </div>
        <div class="col mb-3">
            <div class="card  text-white shadow" style="background-color: #286107;">
                <div class="card-body">
                    <div class="text-uppercase mb-1">Toplam Log Kaydı</div>
                    <div class="h5 mb-0 font-weight-bold">@Model.TotalLogs</div>
                </div>
            </div>
        </div>
    </div>

    <!-- Günlük Giriş Çizelgesi -->
    <div class="row mt-5">
        <div class="col-md-8 offset-md-2">
            <h5>Günlük Girişler (Son 7 Gün)</h5>
            <div style="height:300px;">
                <canvas id="dailyLoginsChart"></canvas>
            </div>
        </div>
    </div>

    <!-- Role Distribution and Details -->
    <div class="row mt-5">
        <div class="col-md-6">
            <h5>Rol Dağılımı</h5>
            <canvas id="rolePieChart" style="max-width: 100%; max-height: 350px;"></canvas>
        </div>
        <div class="col-md-6">
            <h5>Rol Dağılımı Detayları</h5>
            <div class="table-responsive" style="max-height: 350px; overflow-y: auto;">
                <table class="table table-bordered table-striped">
                    <thead class="table-dark" style="background-color:#010D00; color:#ffffff">
                        <tr>
                            <th>Rol Adı</th>
                            <th>Kullanıcı Sayısı</th>
                            <th>Yüzde</th>
                            <th>Rol Yetkisi</th>
                        </tr>
                    </thead>
                    <tbody style="color:#010D00;">
                        @{
                            var total = Model.RoleCounts.Sum();
                            for (int i = 0; i < Model.RoleNames.Count; i++)
                            {
                                var roleName = Model.RoleNames[i];
                                var count = Model.RoleCounts[i];
                                var percentage = total > 0 ? (count * 100.0 / total).ToString("0.0") : "0.0";
                                var description = Model.RoleDescriptions != null && Model.RoleDescriptions.ContainsKey(roleName)
                                ? Model.RoleDescriptions[roleName]
                                : "Açıklama yok.";
                                <tr>
                                    <td>@roleName</td>
                                    <td>@count</td>
                                    <td>@percentage %</td>
                                    <td>@description</td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Recent Logs Table -->
    <div class="row mt-4">
        <div class="col-md-12">
            <h5>Son 5 İşlem</h5>
            <div class="table-responsive">
                <table class="table table-bordered">
                    <thead class="table-dark" style="background-color:#010D00;">
                        <tr>
                            <th>Kullanıcı</th>
                            <th>İşlem</th>
                            <th>Tarih</th>
                        </tr>
                    </thead>
                    <tbody style="color:#010D00;">
                        @foreach (var log in Model.RecentLogs)
                        {
                            <tr>
                                <td>@log.Username</td>
                                <td>@log.Action</td>
                                <td>@log.ActionTime.ToString("dd.MM.yyyy HH:mm")</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        $(document).ready(function () {
            // Pie Chart
            var ctx = document.getElementById('rolePieChart').getContext('2d');
            var rolePieChart = new Chart(ctx, {
                type: 'pie',
                data: {
                    labels: @Html.Raw(Json.Serialize(Model.RoleNames)),
                    datasets: [{
                        data: @Html.Raw(Json.Serialize(Model.RoleCounts)),
                        backgroundColor: [
                            '#007bff', '#28a745', '#ffc107', '#dc3545', '#6f42c1'
                        ]
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'bottom'
                        }
                    }
                }
            });

            // Günlük Giriş Çizelgesi
            var ctx2 = document.getElementById('dailyLoginsChart').getContext('2d');
            var dailyLoginsChart = new Chart(ctx2, {
                type: 'line',
                data: {
                    labels: @Html.Raw(Json.Serialize(Model.Last7Days)),
                    datasets: [{
                        label: 'Günlük Girişler',
                        data: @Html.Raw(Json.Serialize(Model.DailyLogins)),
                        backgroundColor: 'rgba(54, 162, 235, 0.2)',
                        borderColor: 'rgba(54, 162, 235, 1)',
                        borderWidth: 2,
                        fill: true,
                        tension: 0.3
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'bottom'
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            precision: 0
                        }
                    }
                }
            });
        });
    </script>
}